name: CI/CD Pipeline
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  backend-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.23']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true
          cache-dependency-path: |
            backend/go.sum
            backend/go.mod
      
      - name: Download dependencies
        run: go mod download
        working-directory: ./backend
      
      - name: Verify dependencies
        run: go mod verify
        working-directory: ./backend
      
      - name: Run go vet
        run: go vet ./...
        working-directory: ./backend
      
      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest
      
      - name: Run staticcheck
        run: staticcheck ./...
        working-directory: ./backend
      
      - name: Run tests
        run: go test -race -v ./...
        working-directory: ./backend
      
      - name: Build
        run: go build -v ./...
        working-directory: ./backend

  backend-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
      
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          working-directory: ./backend
          args: --timeout=5m

  frontend-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['22']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend
      
      - name: Run type check
        run: npm run type-check
        working-directory: ./frontend
      
      - name: Run unit tests
        run: npm run test:unit
        working-directory: ./frontend
      
      - name: Build frontend
        run: npm run build
        working-directory: ./frontend

  frontend-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend
      
      - name: Run ESLint
        run: npm run lint
        working-directory: ./frontend
        continue-on-error: true